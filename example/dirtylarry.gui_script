local dirtylarry = require "gooey.themes.dirtylarry.dirtylarry"

function init(self)
	dirtylarry.acquire_input()

	dirtylarry.checkbox("checkbox").set_checked(true)
	dirtylarry.radio("radio2").set_selected(true)
	dirtylarry.input("input", gui.KEYBOARD_TYPE_DEFAULT, nil, nil, { empty_text = "EMPTY, MAX 8 CHARS"})
	dirtylarry.input("input_alphanumeric", gui.KEYBOARD_TYPE_DEFAULT, nil, nil, { empty_text = "ALPHA NUMERIC CHARS" })

	self.list_data = { "Sherlock", "Poirot", "Magnum", "Miss Marple", "Morse", "Columbo" }
	dirtylarry.dynamic_list("dynamiclist", self.list_data)
end

function on_input(self, action_id, action)
	local group = dirtylarry.group("group1", function()
		dirtylarry.button("button", action_id,action, function(button)
			if button.long_pressed then
				print("Button was long pressed")
			else
				print("Button was pressed")
			end
		end)
		
		dirtylarry.button("back", action_id,action, function(button)
			msg.post("controller:/go", "show_menu")
		end)

		dirtylarry.checkbox("checkbox", action_id, action, function(checkbox)
			print("checkbox", checkbox.checked)
		end)

		dirtylarry.radiogroup("MYGROUP", action_id, action, function(group_id, action_id, action)
			dirtylarry.radio("radio1", group_id, action_id, action, function(radio)
				print("radio 1", radio.selected)
			end)
			dirtylarry.radio("radio2", group_id, action_id, action, function(radio)
				print("radio 2", radio.selected)
			end)
			dirtylarry.radio("radio3", group_id, action_id, action, function(radio)
				print("radio 3", radio.selected)
			end)
		end)

		dirtylarry.input("input", gui.KEYBOARD_TYPE_DEFAULT, action_id, action, { empty_text = "EMPTY, MAX 8 CHARS", max_length = 8 })
		dirtylarry.input("input_alphanumeric", gui.KEYBOARD_TYPE_DEFAULT, action_id, action, { empty_text = "ALPHA NUMERIC CHARS", allowed_characters = "[%a%d%s]", use_marked_text = false})
		
		dirtylarry.dynamic_list("dynamiclist", self.list_data, action_id, action, nil, function(list)
			print("selected item", list.selected_item, list.data[list.selected_item])
		end)
	end)
	return group.consumed
end
